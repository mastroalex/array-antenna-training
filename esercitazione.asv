% Phased Array System Toolbox
f=3e8 %3 MHz
lambda = physconst('LightSpeed')/f
%%
sensorArrayAnalyzer
%%
Array=ula;
spacing=Array.ElementSpacing
L=(Array.NumElements+1)*spacing
span=Array.NumElements*spacing
%%
testelemnt=64;
wvtool(hamming(testelemnt)); %plot hamming window
wvtool(chebwin(testelemnt)); %plot chebyshev 

%%
ula.Taper %vector with taper coefficients

%%
% Create an isotropic antenna element
close all
Elem = phased.IsotropicAntennaElement;
Elem.FrequencyRange = [0 f];
Array.Element = Elem;
SteeringAngles = [0;0];
% Assign Phase shift quantization bits
PhaseShiftBits = 0;
PropagationSpeed=physconst('LightSpeed');
% Plot Array Geometry
subfigure(2,2,1)
viewArray(Array);
% Find the weights
w = zeros(getNumElements(Array), length(f));
SteerVector = phased.SteeringVector('SensorArray', Array,...
 'PropagationSpeed', PropagationSpeed, 'NumPhaseShifterBits', PhaseShiftBits(1));
for idx = 1:length(f)
    w(:, idx) = step(SteerVector, f(idx), SteeringAngles(:, idx));
end

% Plot 3d graph
format = 'polar';
subfigure(1,2,2);
pattern(Array, f , 'PropagationSpeed', PropagationSpeed,'Type','directivity', 'CoordinateSystem', format,'weights', w(:,1));
